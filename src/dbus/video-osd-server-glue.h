
/*
 *	This file was automatically generated by dbusxx-xml2cpp; DO NOT EDIT!
 */

#ifndef __dbusxx__video_osd_server_glue_h__ADAPTOR_MARSHAL_H
#define __dbusxx__video_osd_server_glue_h__ADAPTOR_MARSHAL_H

#include <dbus-c++/dbus.h>
#include <cassert>

namespace ipcam {
namespace Media {

class OSD_adaptor
: public ::DBus::InterfaceAdaptor
{
public:

    OSD_adaptor()
    : ::DBus::InterfaceAdaptor("ipcam.Media.OSD")
    {
        bind_property(Type, "u", true, true);
        bind_property(Visible, "b", true, true);
        bind_property(Size, "(uu)", true, true);
        bind_property(Position, "(ii)", true, true);
        bind_property(BackgroundColor, "u", true, true);
        bind_property(ForegroundAlpha, "u", true, true);
        bind_property(BackgroundAlpha, "u", true, true);
        bind_property(InvertColor, "b", true, true);
        bind_property(Text, "s", true, true);
        bind_property(FontName, "s", true, true);
        bind_property(FontColor, "u", true, true);
        bind_property(ImagePath, "s", true, true);
    }

    ::DBus::IntrospectedInterface *introspect() const 
    {
        static ::DBus::IntrospectedMethod OSD_adaptor_methods[] = 
        {
            { 0, 0 }
        };
        static ::DBus::IntrospectedMethod OSD_adaptor_signals[] = 
        {
            { 0, 0 }
        };
        static ::DBus::IntrospectedProperty OSD_adaptor_properties[] = 
        {
            { "Type", "u", true, true },
            { "Visible", "b", true, true },
            { "Size", "(uu)", true, true },
            { "Position", "(ii)", true, true },
            { "BackgroundColor", "u", true, true },
            { "ForegroundAlpha", "u", true, true },
            { "BackgroundAlpha", "u", true, true },
            { "InvertColor", "b", true, true },
            { "Text", "s", true, true },
            { "FontName", "s", true, true },
            { "FontColor", "u", true, true },
            { "ImagePath", "s", true, true },
            { 0, 0, 0, 0 }
        };
        static ::DBus::IntrospectedInterface OSD_adaptor_interface = 
        {
            "ipcam.Media.OSD",
            OSD_adaptor_methods,
            OSD_adaptor_signals,
            OSD_adaptor_properties
        };
        return &OSD_adaptor_interface;
    }

public:

    /* properties exposed by this interface, use
     * property() and property(value) to get and set a particular property
     */
    ::DBus::PropertyAdaptor< uint32_t > Type;
    ::DBus::PropertyAdaptor< bool > Visible;
    ::DBus::PropertyAdaptor< ::DBus::Struct< uint32_t, uint32_t > > Size;
    ::DBus::PropertyAdaptor< ::DBus::Struct< int32_t, int32_t > > Position;
    ::DBus::PropertyAdaptor< uint32_t > BackgroundColor;
    ::DBus::PropertyAdaptor< uint32_t > ForegroundAlpha;
    ::DBus::PropertyAdaptor< uint32_t > BackgroundAlpha;
    ::DBus::PropertyAdaptor< bool > InvertColor;
    ::DBus::PropertyAdaptor< std::string > Text;
    ::DBus::PropertyAdaptor< std::string > FontName;
    ::DBus::PropertyAdaptor< uint32_t > FontColor;
    ::DBus::PropertyAdaptor< std::string > ImagePath;

public:

    /* methods exported by this interface,
     * you will have to implement them in your ObjectAdaptor
     */

public:

    /* signal emitters for this interface
     */

private:

    /* unmarshalers (to unpack the DBus message before calling the actual interface method)
     */
};

} } 
#endif //__dbusxx__video_osd_server_glue_h__ADAPTOR_MARSHAL_H
